---
import HeadSeo from '@/components/HeadSeo.astro'
import Nav from '@/components/navigation/Nav.astro'
import { ViewTransitions } from 'astro:transitions'
import { type Frontmatter } from '@/types'
import { DEFAULT_LANGUAGE_CODE } from '@/config'

// font
import '@fontsource/karla/400.css'
import '@fontsource/karla/500.css'
import '@fontsource/karla/700.css'

// 添加 Noto Sans 字体支持 - 同时支持中文、日文、英文
import '@fontsource/noto-sans/400.css'
import '@fontsource/noto-sans/500.css'
import '@fontsource/noto-sans/600.css'
import '@fontsource/noto-sans/700.css'

// 添加 Noto Serif 字体支持
import '@fontsource/noto-serif/400.css'
import '@fontsource/noto-serif/500.css'
import '@fontsource/noto-serif/600.css'
import '@fontsource/noto-serif/700.css'

// 添加 Noto Serif Japanese 字体支持
import '@fontsource/noto-serif-jp/400.css'
import '@fontsource/noto-serif-jp/500.css'
import '@fontsource/noto-serif-jp/600.css'
import '@fontsource/noto-serif-jp/700.css'

// 添加 Font Awesome 图标支持
import '@fortawesome/fontawesome-free/css/all.css'

// custom styling
import '@/styling/scrollbar.css'
import '@/styling/code.css'
import '@/styling/custom-prose.css'

const { frontmatter } = Astro.props as {
  frontmatter?: Frontmatter
}

// 获取当前页面语言
const lang = Astro.url.pathname.split('/')[1] || DEFAULT_LANGUAGE_CODE
---

<style is:global>
  /* 基础字体设置 */
  body {
    font-family: 'Noto Serif JP', 'Noto Serif', 'Noto Sans', sans-serif;
    font-weight: 300;
  }
  
  /* 英文页面使用 Noto Serif */
  [lang="en"] {
    font-family: 'Noto Serif', 'Noto Sans', sans-serif !important;
  }
  
  [lang="en"] * {
    font-family: 'Noto Serif', 'Noto Sans', sans-serif !important;
  }
  
  /* 日文页面使用 Noto Serif JP */
  [lang="jp"] {
    font-family: 'Noto Serif','Noto Serif JP', 'Noto Sans', sans-serif !important;
  }
  
  [lang="jp"] * {
    font-family: 'Noto Serif', 'Noto Serif JP', 'Noto Sans', sans-serif !important;
  }
  
  /* 强制覆盖 Tailwind 的字体设置 */
  .prose[lang="jp"] *,
  .prose-lg[lang="jp"] *,
  .prose-sm[lang="jp"] *,
  .custom-prose[lang="jp"] * {
    font-family: 'Noto Serif JP', 'Noto Serif', 'Noto Sans', sans-serif !important;
  }
  
  .prose[lang="en"] *,
  .prose-lg[lang="en"] *,
  .prose-sm[lang="en"] *,
  .custom-prose[lang="en"] * {
    font-family: 'Noto Serif', 'Noto Sans', sans-serif !important;
  }
  
  /* 重要：font-japanese 类始终使用日语字体，无论页面语言 */
  .font-japanese {
    font-family: 'Noto Serif JP', 'Noto Serif', 'Noto Sans', sans-serif !important;
  }
  
  /* 确保语言切换器中的日语文本使用正确的字体 */
  .font-japanese * {
    font-family: 'Noto Serif JP', 'Noto Serif', 'Noto Sans', sans-serif !important;
  }
</style>

<html data-theme="github-light">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <ViewTransitions />
    <HeadSeo type="website" frontmatter={frontmatter} />
  </head>
  <body class="text-lightModeText dark:text-darkModeText" lang={lang}>
    <Nav />
    <div
      class="fixed left-0 top-0 z-[-2] h-screen w-full bg-lightModeBg bg-lightModeGradient transition-colors duration-[inherit] dark:bg-darkModeBg dark:bg-darkModeGradient"
    >
    </div>
    <div class="pt-20">
      <slot />
    </div>
  </body>
</html>

<script>
  import {
    LIGHT_MODE_CODE_BLOCK_THEME,
    DARK_MODE_CODE_BLOCK_THEME,
  } from '@/config'

  function init() {
    document.documentElement.classList.add('scroll-smooth')
    // adding scroll-smooth class to html tag manually didn't work so I'm adding that class this way

    if (
      localStorage.theme === 'dark' ||
      (!('theme' in localStorage) &&
        window.matchMedia('(prefers-color-scheme: dark)').matches)
    ) {
      document.documentElement.classList.add('dark')
      document.documentElement.setAttribute(
        'data-theme',
        DARK_MODE_CODE_BLOCK_THEME as string,
      )
    } else {
      document.documentElement.classList.remove('dark')
      document.documentElement.setAttribute(
        'data-theme',
        LIGHT_MODE_CODE_BLOCK_THEME as string,
      )
    }

    setTimeout(() => {
      document.body.classList.add('duration-300', 'transition-colors')
    }, 300)

    // im adding those classes with 300ms delay, so theres no flashing on inital page load
  }

  init()
  document.addEventListener('astro:after-swap', init)
</script>
