---
import Search from '@/components/navigation/Search'
import { type MarkdownInstance } from 'astro'
import { type MarkdownRecord } from '@/types'
import type { LanguageKeys } from '@/i18n/ui'
import { GITHUB_REPO_URL, DEFAULT_LANGUAGE_CODE } from '@/config'
import ThemeSwitcher from '@/components/navigation/ThemeSwitcher.astro'
import SidebarLinks from '@/components/sidebar/SidebarLinks.astro'

const langFromURL = Astro.url.pathname.split('/')[1] || DEFAULT_LANGUAGE_CODE
const lang: LanguageKeys = langFromURL as LanguageKeys

const getDocs = async () => {
  let enDocs: MarkdownInstance<any>[] = []
  let jpDocs: MarkdownInstance<any>[] = []

  try {
    enDocs = await Astro.glob(`@/pages/en/**/*.{md,mdx}`)
    console.log('MobileNav - Loaded English docs:', enDocs.length)
  } catch (error) {
    console.error('MobileNav - Error loading English docs:', error)
  }

  try {
    jpDocs = await Astro.glob(`@/pages/jp/**/*.{md,mdx}`)
    console.log('MobileNav - Loaded Japanese docs:', jpDocs.length)
  } catch (error) {
    console.error('MobileNav - Error loading Japanese docs:', error)
  }

  const allDocs = [...enDocs, ...jpDocs]
  console.log('MobileNav - Total docs loaded:', allDocs.length)
  
  // Filter out any invalid docs
  const validDocs = allDocs.filter(doc => {
    if (!doc || !doc.frontmatter) {
      console.warn('MobileNav - Invalid doc found:', doc)
      return false
    }
    return true
  })
  
  console.log('MobileNav - Valid docs after filtering:', validDocs.length)
  
  return validDocs.map((doc: MarkdownInstance<any>) => {
    // Get the full content for search including headings
    let content = ''
    
    // Add safety checks for frontmatter
    const title = doc.frontmatter?.title || 'Untitled'
    const description = doc.frontmatter?.description || 'No description'
    
    try {
      // Start with title and description
      content = `${title} ${description}`
      
      // Add full markdown content if available
      if (doc.compiledContent) {
        try {
          const compiledContent = doc.compiledContent()
          if (compiledContent) {
            // Remove HTML tags but keep text content
            const textContent = compiledContent
              .replace(/<[^>]*>/g, '') // Remove HTML tags
              .replace(/\s+/g, ' ') // Normalize whitespace
              .trim()
            content += ' ' + textContent
          }
        } catch (error) {
          console.error('Error getting compiled content:', error)
        }
      }
      
      // If no compiled content, try raw content
      if (!doc.compiledContent && doc.rawContent) {
        try {
          const rawContent = doc.rawContent()
          if (rawContent) {
            // Remove frontmatter but keep headings and content
            const contentWithoutFrontmatter = rawContent
              .replace(/---[\s\S]*?---/, '') // Remove frontmatter
              .trim()
            content += ' ' + contentWithoutFrontmatter
          }
        } catch (error) {
          console.error('Error getting raw content:', error)
        }
      }
      
      // For Japanese pages, add additional keywords to ensure coverage
      if (doc.url?.includes('/jp/')) {
        if (doc.url?.includes('about')) {
          content += ' 博士課程 東京大学 公衆衛生学 経済学 慶應義塾大学 QOL研究 MCID 腎不全 慢性腎臓病 緩和ケア 共同意思決定 SDM 縦断データ 欠損データ R SAS Python 疫学 生物統計学 公共健康医学 経済学部 経済学科 生活の質 臨床的意味 医療アウトカム 臨床試験 コホート研究 末期腎不全 保存的腎臓療法 腎代替療法 eGFR 療法選択 治療アプローチ 日本のESRDケア 共有意思決定 関心 テーマ 測定 分析 慢性腎臓病 緩和ケア 共同意思決定 縦断データ解析 欠損データ解析 スキル 言語 日本語 英語 中国語 統計プログラミング 連絡先'
        } else if (doc.url?.includes('introduction')) {
          content += ' ブログ 学習 研究 記録 訪問 ありがとう 私のブログ ようこそ 記録する ご訪問'
        }
      }
      
      // For English pages, add additional keywords
      if (doc.url?.includes('/en/')) {
        if (doc.url?.includes('about')) {
          content += ' PhD student Master of Public Health University of Tokyo Biostatistics Epidemiology R SAS Python academic journey research interests QOL research MCID-embedded mean change clinical meaningful difference Q-COME cohort study end-stage renal disease conservative kidney management renal replacement therapy eGFR treatment choice therapeutic approach Japanese ESRD care shared decision making skills languages statistical programming contact'
        } else if (doc.url?.includes('introduction')) {
          content += ' blog learning research record visit thank you welcome my blog academic journey thoughts'
        }
      }
      
    } catch (error) {
      console.error('Error getting content for', doc.url, error)
    }
    
    return {
      title: title,
      description: description,
      content: content, // Full content including headings
      url: doc.url,
      lang: doc.url?.includes('/jp/') ? 'jp' : 'en'
    } as MarkdownRecord
  })
}

const docs: MarkdownRecord[] = await getDocs()
---

<button data-active="false" id="hamburger-btn" class="ml-6 hidden w800:inline">
  <svg
    class="h-6 w-6"
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 24 24"
    fill="none"
    id="hamburger"
  >
    <path
      d="M20 7L4 7"
      class="stroke-[#374151]/80 dark:stroke-white/80"
      stroke-width="1.5"
      stroke-linecap="round"></path>
    <path
      d="M20 12L4 12"
      class="stroke-[#374151]/80 dark:stroke-white/80"
      stroke-width="1.5"
      stroke-linecap="round"></path>
    <path
      d="M20 17L4 17"
      class="stroke-[#374151]/80 dark:stroke-white/80"
      stroke-width="1.5"
      stroke-linecap="round"></path>
  </svg>

  <svg
    class="hidden h-6 w-6"
    xmlns="http://www.w3.org/2000/svg"
    viewBox="-0.5 0 25 25"
    fill="none"
    id="close"
  >
    <path
      d="M3 21.32L21 3.32001"
      class="stroke-[#374151]/80 dark:stroke-white/80"
      stroke-width="1.5"
      stroke-linecap="round"
      stroke-linejoin="round"></path>
    <path
      d="M3 3.32001L21 21.32"
      class="stroke-[#374151]/80 dark:stroke-white/80"
      stroke-width="1.5"
      stroke-linecap="round"
      stroke-linejoin="round"></path>
  </svg>
</button>

<div
  id="mobile-hamburger"
  class="fixed left-0 top-20 z-50 hidden h-[calc(100dvh-80px)] w-full bg-lightModeBg bg-opacity-95 bg-lightModeGradient py-8 transition-colors duration-[inherit] dark:bg-darkModeBg dark:bg-darkModeGradient"
>
  <div class="w-full px-8 w500:px-5">
    <div class="flex h-11 w-full items-center w400:justify-between">
      <Search docs={docs} lang={lang} client:only />

      <!-- Other components that should be hidden when search is active -->
      <div id="mobile-other-components" class="flex items-center gap-10 ml-auto">
        <a class="hidden w500:inline" target="_blank" href={GITHUB_REPO_URL}>
          <svg
            class="h-6 w-6"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 1024 1024"
            ><path
              class="fill-[#374151] transition-colors dark:fill-[#e5e7eb]"
              d="m1024 525c0 225.9-146.6 417.9-348.8 485.8-25.6 5.1-35.2-10.9-35.2-24.4 0-17.2.6-72.3.6-140.8 0-48-16-78.7-34.5-94.7 113.9-12.8 233.6-56.3 233.6-252.8 0-56.3-19.9-101.7-52.5-137.6 5.1-12.8 23-65.3-5.1-135.7 0 0-42.9-14-140.8 52.5-41-11.5-84.5-17.3-128-17.3s-87.1 5.8-128 17.3c-97.9-65.9-140.8-52.5-140.8-52.5-28.2 70.4-10.3 122.9-5.1 135.7-32.7 35.9-52.5 81.9-52.5 137.6 0 195.9 119 240 232.9 252.8-14.7 12.8-28.1 35.2-32.6 68.5-29.4 13.4-103 35.2-149.1-42.2-9.6-15.4-38.4-53.2-78.7-52.5-42.9.6-17.3 24.3.6 33.9 21.8 12.2 46.7 57.6 52.5 72.3 10.2 28.8 43.5 83.9 172.1 60.2 0 42.9.7 83.2.7 95.3 0 13.5-9.6 28.8-35.2 24.4-203.5-67.9-350.1-259.2-350.1-485.8 0-282.9 229.1-512 512-512s512 229.1 512 512z"
              fill-rule="evenodd"></path></svg
          >
        </a>

        <a class="hidden w500:inline" target="_blank" href="https://x.com/ame_sph">
          <svg
            class="h-6 w-6"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            ><path
              class="fill-lightModeIcon transition-colors dark:fill-darkModeIcon"
              d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"
              fill-rule="evenodd"></path></svg
          >
        </a>

        <div class="hidden w500:block">
          <ThemeSwitcher />
        </div>
      </div>
    </div>

    <hr
      class="my-4 h-px w-full border-0 bg-black/20 outline-none dark:bg-white/20"
    />

    <!-- Content area that changes based on search state -->
    <div id="mobile-content-area" class="w-full">
      <!-- Default content (Introduction and About Me) -->
      <aside id="mobile-default-content" class="sidebar h-[calc(100dvh-188px)] w-full overflow-y-auto">
        <SidebarLinks lang={lang} />
      </aside>
      
      <!-- Search results area (hidden by default) -->
      <div id="mobile-search-results" class="hidden w-full">
        <!-- This will be populated by the Search component -->
      </div>
    </div>
  </div>
</div>

<script>
  const init = () => {
    const btn = document.querySelector('#hamburger-btn')
    const mobileHamburger = document.querySelector('#mobile-hamburger')
    const otherComponents = document.querySelector('#mobile-other-components')
    const defaultContent = document.querySelector('#mobile-default-content')
    const searchResults = document.querySelector('#mobile-search-results')

    const hamburgerIcon = document.querySelector('#hamburger-btn svg#hamburger')
    const closeIcon = document.querySelector('#hamburger-btn svg#close')

    btn!.addEventListener('click', () => {
      const isActive = btn?.getAttribute('data-active') === 'true'

      btn?.setAttribute('data-active', isActive ? 'false' : 'true')

      document.body.style.overflow = isActive ? 'unset' : 'hidden'

      mobileHamburger?.classList.toggle('hidden')
      hamburgerIcon?.classList.toggle('hidden')
      closeIcon?.classList.toggle('hidden')
    })

    // Listen for search state changes from Search component
    window.addEventListener('searchStateChange', (event: any) => {
      const isSearching = event.detail.isSearching
      
      if (otherComponents) {
        if (isSearching) {
          otherComponents.classList.add('hidden')
        } else {
          otherComponents.classList.remove('hidden')
        }
      }
      
      // Toggle content visibility
      if (defaultContent && searchResults) {
        if (isSearching) {
          defaultContent.classList.add('hidden')
          searchResults.classList.remove('hidden')
        } else {
          defaultContent.classList.remove('hidden')
          searchResults.classList.add('hidden')
        }
      }
    })
  }

  init()
  document.addEventListener('astro:after-swap', init)
</script>
